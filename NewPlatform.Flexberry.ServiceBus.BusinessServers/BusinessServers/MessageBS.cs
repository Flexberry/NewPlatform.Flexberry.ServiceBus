//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан программой.
//     Исполняемая версия:4.0.30319.42000
//
//     Изменения в этом файле могут привести к неправильной работе и будут потеряны в случае
//     повторной генерации кода.
// </auto-generated>
//------------------------------------------------------------------------------

namespace NewPlatform.Flexberry.ServiceBus
{
    using System;
    using System.Xml;


    // *** Start programmer edit section *** (Using statements)
    using ICSSoft.STORMNET;
    using ICSSoft.STORMNET.Business;
    using ICSSoft.STORMNET.FunctionalLanguage;
    using ICSSoft.STORMNET.FunctionalLanguage.SQLWhere;
    using ICSSoft.STORMNET.KeyGen;
    // *** End programmer edit section *** (Using statements)


    /// <summary>
    /// MessageBS.
    /// </summary>
    // *** Start programmer edit section *** (MessageBS CustomAttributes)

    // *** End programmer edit section *** (MessageBS CustomAttributes)
    [ICSSoft.STORMNET.AccessType(ICSSoft.STORMNET.AccessType.@this)]
    public class MessageBS : ICSSoft.STORMNET.Business.BusinessServer
    {

        // *** Start programmer edit section *** (MessageBS CustomMembers)

        /// <summary>
        /// Returns LCS for loading messages with a specific <paramref name="group"/>, received by subscriptions for the specified <paramref name="client"/> and <paramref name="messageType"/>.
        /// </summary>
        /// <param name="client">Client.</param>
        /// <param name="messageType">Message type.</param>
        /// <param name="group">Group.</param>
        /// <param name="view">The view, if not specified, uses <see cref="Message.Views.MessageLightView"/>.</param>
        /// <returns></returns>
        public static LoadingCustomizationStruct GetMessagesWithGroupLCS(Client client, MessageType messageType, string group, View view = null)
        {
            LoadingCustomizationStruct lcs = LoadingCustomizationStruct.GetSimpleStruct(typeof(Message), view ?? Message.Views.MessageLightView);

            lcs.LimitFunction = SQLWhereLanguageDef.LanguageDef.GetFunction(
                SQLWhereLanguageDef.LanguageDef.funcAND,
                SQLWhereLanguageDef.LanguageDef.GetFunction(
                    SQLWhereLanguageDef.LanguageDef.funcEQ,
                    new VariableDef(SQLWhereLanguageDef.LanguageDef.GuidType, Information.ExtractPropertyPath<Message>(x => x.Recipient)),
                    ((KeyGuid)client.__PrimaryKey).Guid),
                SQLWhereLanguageDef.LanguageDef.GetFunction(
                    SQLWhereLanguageDef.LanguageDef.funcEQ,
                    new VariableDef(SQLWhereLanguageDef.LanguageDef.GuidType,
                    Information.ExtractPropertyPath<Message>(x => x.MessageType)),
                    ((KeyGuid)messageType.__PrimaryKey).Guid),
                SQLWhereLanguageDef.LanguageDef.GetFunction(
                    SQLWhereLanguageDef.LanguageDef.funcEQ,
                    new VariableDef(SQLWhereLanguageDef.LanguageDef.StringType, Information.ExtractPropertyPath<Message>(x => x.Group)),
                    group),
                SQLWhereLanguageDef.LanguageDef.GetFunction(
                    SQLWhereLanguageDef.LanguageDef.funcEQ,
                    new VariableDef(SQLWhereLanguageDef.LanguageDef.BoolType, Information.ExtractPropertyPath<Message>(x => x.IsSending)),
                    false));

            return lcs;
        }
        // *** End programmer edit section *** (MessageBS CustomMembers)


        // *** Start programmer edit section *** (OnUpdateMessage CustomAttributes)

        // *** End programmer edit section *** (OnUpdateMessage CustomAttributes)
        public virtual ICSSoft.STORMNET.DataObject[] OnUpdateMessage(NewPlatform.Flexberry.ServiceBus.Message UpdatedObject)
        {
            // *** Start programmer edit section *** (OnUpdateMessage)
            if (UpdatedObject.GetStatus() == ObjectStatus.Created && !string.IsNullOrEmpty(UpdatedObject.Group) &&
                DataService.GetObjectsCount(GetMessagesWithGroupLCS(UpdatedObject.Recipient, UpdatedObject.MessageType, UpdatedObject.Group)) > 0)
            {
                throw new Exception($"A similar message with the group '{UpdatedObject.Group}' already exists.");
            }

            return new ICSSoft.STORMNET.DataObject[0];
            // *** End programmer edit section *** (OnUpdateMessage)
        }
    }
}
