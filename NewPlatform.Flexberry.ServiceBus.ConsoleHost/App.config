<?xml version="1.0" encoding="utf-8"?>
<configuration>
  <configSections>
    <section name="unity" type="Microsoft.Practices.Unity.Configuration.UnityConfigurationSection, Microsoft.Practices.Unity.Configuration"/>
    <section name="loggingConfiguration" type="Microsoft.Practices.EnterpriseLibrary.Logging.Configuration.LoggingSettings, Microsoft.Practices.EnterpriseLibrary.Logging, Version=5.0.505.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35"/>
    <section name="log4net" type="log4net.Config.Log4NetConfigurationSectionHandler, log4net"/>
  </configSections>
  <startup>
    <supportedRuntime version="v4.0" sku=".NETFramework,Version=v4.5.2"/>
  </startup>
  <appSettings>
    <!-- общие настройки -->
    <!-- период времени, через который производится сканирование БД на наличие новых подписчиков -->
    <add key="ScanningTimeout" value="3000"/>
    <!-- период времени между двумя попытками разослать callback-сообщения (в миллисекундах) -->
    <add key="SendingCallbackTimeOut" value="1000"/>
    <!-- период времени, через который последует очередная попытка отправить сообщение (в минутах) -->
    <add key="AdditionalTimeout" value="2"/>
    <!-- период времени, на который продляется подписка (в секундах) -->
    <add key="UpdateForATime" value="180"/>
    <!-- имя службы для шины -->
    <add key="ServiceName" value="ServiceBus"/>
    <!-- идентификатор данной шины для других шин (гуид) -->
    <add key="ServiceID4SB" value="{0fa20829-de03-4ef5-a3dc-0a8092946e73}"/>
    <!-- строковый идентификатор шины (для удобства пользователей) -->
    <add key="ServiceBusClientKey" value="NewPlatformSB"/>
    <!-- это ваще хитрый параметр. 
           он обозначает какое количество сканируемых периодов мы будем пропускать. 
           т.е. сканировать на новые типы сообщений или события не каждые три сек, а пореже. 
           два периода пропустили, 
           в след. посмотрели не добавилось ли чего, на что мы захотим подписаться. -->
    <add key="UpdateMsgEvntType" value="2"/>
    <!-- /общие настройки -->

    <!-- Следует ли при запуске шины привести в соответствие статусы сообщений, имеющихся в БД. -->
    <add key="ClearMessageStatusOnStart" value="true"/>

    <!-- настройки для проверки почтового ящика -->
    <!-- проверять почтовый ящик или нет -->
    <add key="CheckMail" value="false"/>
    <!-- период времени между двумя сканированиями почтового ящика (в секундах) -->
    <add key="MailScanPeriod" value="60"/>
    <!-- servicebus@mail.ru -->
    <add key="MailLogin" value=""/>
    <add key="MailPassword" value=""/>
    <add key="MailServer" value=""/>
    <add key="MailPort" value=""/>
    <add key="CountConnection" value=""/>
    <add key="WaitForConnection" value=""/>
    <!-- /настройки для проверки почтового ящика -->

    <!-- Период обновления подписок из БД в случае использования CachedSubscriptionsManager в миллисекундах. -->
    <add key="SubscriptionsUpdatePeriod" value="30000"/>
    <!-- Информационные сообщения (прием/отправка сообщений и т.д.) лога включены. -->
    <add key="EnableInformationLogging" value="true"/>
    <!-- Максимальное количество задач отправки сообщений, находящихся в оперативной памяти, для OptimizedSendingManager. -->
    <add key="OsmMaxSendingTasks" value="1000"/>
    <!-- Интервал между обновлениями настроек статистики в мс, для DefaultStatisticsSettings. -->
    <add key="StatSettingsUpdatePeriod" value="60000"/>
    <add key="ClientSettingsProvider.ServiceUri" value=""/>
  </appSettings>
  <unity xmlns="http://schemas.microsoft.com/practices/2010/unity">
    <assembly name="System, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089"/>
    <assembly name="System.ServiceModel, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089"/>
    <assembly name="NewPlatform.Flexberry.ServiceBus"/>
    <assembly name="NewPlatform.Flexberry.ServiceBus.ClientTools"/>
    <assembly name="NewPlatform.Flexberry.ServiceBus.Components"/>
    <alias alias="singleton" type="Microsoft.Practices.Unity.ContainerControlledLifetimeManager, Microsoft.Practices.Unity"/>
    <container>
      <register type="ICSSoft.STORMNET.Business.Audit.IAuditService, ICSSoft.STORMNET.Business" mapTo="ICSSoft.STORMNET.Business.Audit.AuditService, ICSSoft.STORMNET.Business"/>
      <register type="ICSSoft.STORMNET.Security.ISecurityManager, ICSSoft.STORMNET.DataObject" mapTo="ICSSoft.STORMNET.Security.EmptySecurityManager, ICSSoft.STORMNET.DataObject"/>
      <register type="ICSSoft.STORMNET.Business.IDataService, ICSSoft.STORMNET.Business" mapTo="ICSSoft.STORMNET.Business.PostgresDataService, ICSSoft.STORMNET.Business.PostgresDataService">
        <property name="CustomizationString" value="Server=dis-storage;Port=5432;User Id=postgres;Password=P@ssw0rd;Database=RabbitHwsb;"/>
        <lifetime type="singleton"/>
      </register>
      <register type="NewPlatform.Flexberry.ServiceBus.Components.CrossBusCommunicationService" mapTo="NewPlatform.Flexberry.ServiceBus.Components.CrossBusCommunicationService">
        <lifetime type="singleton"/>
        <property name="Enabled" value="false"/>
      </register>
      <register type="NewPlatform.Flexberry.ServiceBus.Components.ILogger" mapTo="NewPlatform.Flexberry.ServiceBus.Components.Log4NetLogger">
        <lifetime type="singleton"/>
      </register>

      <!--Подключение к RMQ-->


      <!--Подключение к Management Plugin'у RMQ-->
      <register name="managementClient" type="EasyNetQ.Management.Client.IManagementClient, EasyNetQ.Management.Client, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" mapTo="EasyNetQ.Management.Client.ManagementClient, EasyNetQ.Management.Client, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null">
        <constructor>
          <param name="hostUrl" value="localhost" />
          <param name="username" value="guest" />
          <param name="password" value="guest" />
          <param name="portNumber" value="15672" />
          <param name="timeout">
            <optional />
          </param>
          <param name="configureRequest" >
            <optional />
          </param>
          <param name="ssl" value="false" />
        </constructor>
      </register>

      <!--Менеджеры подписок-->
      <register name="esbSubManager" type="NewPlatform.Flexberry.ServiceBus.Components.ISubscriptionsManager" mapTo="NewPlatform.Flexberry.ServiceBus.Components.CachedSubscriptionsManager">
        <lifetime type="singleton"/>
      </register>

      <register name="mqSubManager" type="NewPlatform.Flexberry.ServiceBus.Components.ISubscriptionsManager" mapTo="NewPlatform.Flexberry.ServiceBus.Components.RmqSubscriptionsManager">
        <constructor>
          <param name="managementClient" type="EasyNetQ.Management.Client.IManagementClient, EasyNetQ.Management.Client, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null">
            <dependency name="managementClient" />
          </param>
        </constructor>
      </register>


      <!--Менеджер получения/доставки-->


      <register type="NewPlatform.Flexberry.ServiceBus.Components.IObjectRepository" mapTo="NewPlatform.Flexberry.ServiceBus.Components.CachedDataServiceObjectRepository">
        <lifetime type="singleton"/>
      </register>
      <register name="wcfAddress" type="System.Uri" mapTo="System.Uri">
        <constructor>
          <param name="uriString" value="http://localhost:7075/WcfService"/>
        </constructor>
      </register>
      <register name="wcfBinding" type="System.ServiceModel.Channels.Binding" mapTo="System.ServiceModel.WSHttpBinding">
        <constructor>
          <!-- In mono this "mode", usually this "securityMode". -->
          <param name="mode" value="None" parameterType="System.ServiceModel.SecurityMode"/>
          <param name="reliableSessionEnabled" value="false"/>
        </constructor>
      </register>
      <register type="NewPlatform.Flexberry.ServiceBus.Components.WcfService" mapTo="NewPlatform.Flexberry.ServiceBus.Components.WcfService">
        <lifetime type="singleton"/>
        <property name="Address" dependencyName="wcfAddress"/>
        <property name="Binding" dependencyName="wcfBinding"/>
        <property name="UseWcfSettingsFromConfig" value="false"/>
        <property name="PublishWSDL" value="true"/>
      </register>
      <register type="NewPlatform.Flexberry.ServiceBus.Components.WebApiService" mapTo="NewPlatform.Flexberry.ServiceBus.Components.WebApiService">
        <lifetime type="singleton"/>
        <constructor>
          <param name="baseAddress" value="http://+:7085/RestService"/>
          <param name="sendingManager"/>
          <param name="receivingManager"/>
        </constructor>
      </register>
    </container>
  </unity>
  <system.serviceModel>
    <bindings>
      <wsHttpBinding>
        <binding>
          <security mode="None"/>
        </binding>
      </wsHttpBinding>
    </bindings>
    <services>
      <service behaviorConfiguration="ServiceBusServiceBehavior" name="NewPlatform.Flexberry.ServiceBus.SBService">
        <endpoint address="" binding="wsHttpBinding" contract="HighwaySbWcf.IServiceBusService"/>
        <endpoint address="" binding="wsHttpBinding" contract="HighwaySbWcf.IServiceBusInterop"/>
        <endpoint address="mex" name="MetaData" binding="mexHttpBinding" contract="IMetadataExchange"/>
        <host>
          <baseAddresses>
            <add baseAddress="http://localhost:7075/WcfService"/>
          </baseAddresses>
        </host>
      </service>
    </services>
    <client>
      <endpoint address="" name="CallbackClient" binding="wsHttpBinding" contract="HighwaySbWcf.ICallbackSubscriber"/>
    </client>
    <behaviors>
      <serviceBehaviors>
        <behavior name="ServiceBusServiceBehavior">
          <serviceMetadata httpGetEnabled="True"/>
          <serviceDebug includeExceptionDetailInFaults="True"/>
        </behavior>
      </serviceBehaviors>
    </behaviors>
  </system.serviceModel>
  <runtime>
    <assemblyBinding xmlns="urn:schemas-microsoft-com:asm.v1">
      <dependentAssembly>
        <assemblyIdentity name="Newtonsoft.Json" publicKeyToken="30ad4fe6b2a6aeed" culture="neutral"/>
        <bindingRedirect oldVersion="0.0.0.0-8.0.0.0" newVersion="8.0.0.0"/>
      </dependentAssembly>
      <dependentAssembly>
        <assemblyIdentity name="System.Net.Http.Formatting" publicKeyToken="31bf3856ad364e35" culture="neutral"/>
        <bindingRedirect oldVersion="0.0.0.0-5.2.3.0" newVersion="5.2.3.0"/>
      </dependentAssembly>
      <dependentAssembly>
        <assemblyIdentity name="System.Web.Http" publicKeyToken="31bf3856ad364e35" culture="neutral"/>
        <bindingRedirect oldVersion="0.0.0.0-5.2.3.0" newVersion="5.2.3.0"/>
      </dependentAssembly>
      <dependentAssembly>
        <assemblyIdentity name="Npgsql" publicKeyToken="5d8b90d52f46fda7" culture="neutral"/>
        <bindingRedirect oldVersion="0.0.0.0-3.0.8.0" newVersion="3.0.8.0"/>
      </dependentAssembly>
      <dependentAssembly>
        <assemblyIdentity name="Mono.Security" publicKeyToken="0738eb9f132ed756" culture="neutral"/>
        <bindingRedirect oldVersion="0.0.0.0-4.0.0.0" newVersion="4.0.0.0"/>
      </dependentAssembly>
      <dependentAssembly>
        <assemblyIdentity name="Microsoft.Practices.ServiceLocation" publicKeyToken="31bf3856ad364e35" culture="neutral"/>
        <bindingRedirect oldVersion="0.0.0.0-1.3.0.0" newVersion="1.3.0.0"/>
      </dependentAssembly>
    </assemblyBinding>
  </runtime>
  <system.web>
    <membership defaultProvider="ClientAuthenticationMembershipProvider">
      <providers>
        <add name="ClientAuthenticationMembershipProvider" type="System.Web.ClientServices.Providers.ClientFormsAuthenticationMembershipProvider, System.Web.Extensions, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35" serviceUri=""/>
      </providers>
    </membership>
    <roleManager defaultProvider="ClientRoleProvider" enabled="true">
      <providers>
        <add name="ClientRoleProvider" type="System.Web.ClientServices.Providers.ClientRoleProvider, System.Web.Extensions, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35" serviceUri="" cacheTimeout="86400"/>
      </providers>
    </roleManager>
  </system.web>
  <!-- логирование, используется только один вариант -->
  <log4net>
    <appender name="LogFileAppender" type="log4net.Appender.RollingFileAppender">
      <param name="File" value="ServiceBus.log"/>
      <param name="AppendToFile" value="true"/>
      <param name="RollingStyle" value="Date"/>
      <param name="Encoding" value="utf-8"/>
      <layout type="log4net.Layout.PatternLayout">
        <param name="ConversionPattern" value="%-5p %d{yyyy-MM-dd HH:mm:ss} [%property{linkedMessage}] %property{title}: %m%n"/>
      </layout>
    </appender>
    <root>
      <level value="DEBUG"/>
      <appender-ref ref="LogFileAppender"/>
    </root>
  </log4net>
  <loggingConfiguration name="Logging Application Block" tracingEnabled="true" defaultCategory="Exception" logWarningsWhenNoCategoriesMatch="true">
    <listeners>
      <add formatter="Text Formatter" listenerDataType="IIS.Caseberry.Logging.MsEntLib.Configuration.CaseberryDatabaseTraceListenerData, IIS.Caseberry.Logging.MsEntLib" traceOutputOptions="None" type="IIS.Caseberry.Logging.MsEntLib.CaseberryDatabaseTraceListener, IIS.Caseberry.Logging.MsEntLib" name="Database Trace Listener"/>
    </listeners>
    <formatters>
      <add type="Microsoft.Practices.EnterpriseLibrary.Logging.Formatters.TextFormatter, Microsoft.Practices.EnterpriseLibrary.Logging" template="Timestamp: {timestamp(local)}{newline} Message: {message}{newline} Category: {category}{newline} Priority: {priority}{newline} EventId: {eventid}{newline} Severity: {severity}{newline} Title:{title}{newline} Machine: {localMachine}{newline} App Domain: {localAppDomain}{newline} ProcessId: {localProcessId}{newline} Process Name: {localProcessName}{newline} Thread Name: {threadName}{newline} Win32 ThreadId:{win32ThreadId}{newline} Extended Properties: {dictionary({key} - {value}{newline})}" name="Text Formatter"/>
    </formatters>
    <specialSources>
      <allEvents switchValue="All" name="All Events"/>
      <notProcessed switchValue="All" name="Unprocessed Category">
        <listeners>
          <add name="Database Trace Listener"/>
        </listeners>
      </notProcessed>
      <errors switchValue="All" name="Logging Errors &amp; Warnings"/>
    </specialSources>
  </loggingConfiguration>
</configuration>
